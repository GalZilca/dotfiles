#!/bin/bash

set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
BACKUP_DIR=~/dotfiles_backup
IGNORE_LIST="$(basename $0) README.md tmux-powerline"

run_git_submodule_update()
{
    cd $DIR
    git submodule update --init --recursive
    if [[ $? != 0 ]]; then
        echo "Can't install git repository's submodules."
        cd - > /dev/null
        return 1
    fi
    cd - > /dev/null
}

if [[ -d $BACKUP_DIR && $1 != "-f" ]]; then
    echo "Backup direcory ($BACKUP_DIR) already exist. use -f to force (and delete it)."
    exit 1
fi

run_git_submodule_update

echo "Creating symbolic links to your dotfiles."

if [[ -d $BACKUP_DIR ]]; then
    rm -rf $BACKUP_DIR                      # not removing with * and using else to mkdir cause dotfiles won't be deleted.
fi
mkdir $BACKUP_DIR

for file in $(ls $DIR); do
    if [[ $IGNORE_LIST != *$file* ]]; then   # not linking files in the ignore list (like this script)
        if [[ -L ~/.$file ]]; then          # if file is a link then delete it.
            rm ~/.$file
        elif [[ -a ~/.$file ]]; then        # if a real existing file, then back it up.
            mv ~/.$file $BACKUP_DIR/
        fi
        ln -s $DIR/$file ~/.$file           # create link to repository dotfiles.
    fi
done

if [[ $(ls -A $BACKUP_DIR | wc -l) = 0 ]]; then         # clear backup dir if still empty
    rmdir $BACKUP_DIR
else
    echo "Backup dotfiles were created at: $BACKUP_DIR"
fi

echo "Run vim to download your plugins."
